81. Search in Rotated Sorted Array II
Suppose an array sorted in ascending order is rotated at some pivot unknown to you beforehand.
(i.e., [0,0,1,2,2,5,6] might become [2,5,6,0,0,1,2]).
You are given a target value to search. If found in the array return true, otherwise return false.
Example 1:
Input: nums = [2,5,6,0,0,1,2], target = 0
Output: true
class Solution(object):
    def search(self, nums, target):
        """
        :type nums: List[int]
        :type target: int
        :rtype: bool
        """
        if nums:
            left = 0
            length = len(nums)
            right = length-1
        else:                                  #empty list
            return False
        
        while (left+1)< right:
            mid = left + (right- left)//2
            
            if nums[mid] == target:
                return True
            elif nums[mid] > nums[left]: # left side is ascending order
                if target >= nums[left] and target < nums[mid]:
                    right = mid
                else:
                    left = mid
            elif nums[mid] < nums[left]:
                if target > nums[mid] and target <= nums[right]:
                    left = mid
                else:
                    right = mid
            else:                    #mid == left
                left +=1
                
        if nums[left] == target:
            return True
        if nums[right] ==  target:
            return True
        
        return False
