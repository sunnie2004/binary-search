153. Find Minimum in Rotated Sorted Array
Suppose an array sorted in ascending order is rotated at some pivot unknown to you beforehand.
(i.e.,  [0,1,2,4,5,6,7] might become  [4,5,6,7,0,1,2]).
Find the minimum element.
You may assume no duplicate exists in the array.
Example 1:
Input: [3,4,5,1,2] 
Output: 1
class Solution(object):
    def findMin(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        left = 0
        length = len(nums)
        right = length-1
        
        MinNumber = nums[0]  #assume first one is smallest 
        
        while (left+1) < right:
            mid = left + (right-left)//2
            
            if nums[mid] > MinNumber:
                left = mid
            else:
                right = mid
                MinNumber = nums[mid] #replace it after finding smaller one
        
        return min(nums[left],nums[right],MinNumber)
